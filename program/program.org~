* TODO Gelli y Jellyamp. Clientes de Jellyfin para Android y Escritorio Linux, Windows y Mac
:PROPERTIES:
:TITLE: Clientes de Jellyfin para Android y Escritorio Linux, Windows y Mac
:EXPORT_FILE_NAME: clientes-de-jellyfin-para-android-y-escritorio-linux-windows-y-mac
:DESCRIPTION: Crecen los clientes de Jellyfin.
:EXPORT_DATE: 2021-07-11 21:40
:CATEGORY: jellyfin
:TAG: servidor
:IMAGE: ./images-blog/jellyfin.png
:END:

Crecen los clientes de Jellyfin.
#+HTML: <center>
[[./images-blog/jellyfin.png]]
#+HTML: </center>


** Gelli




#+HTML: <center>
[[./images-blog/gelli.png]]
#+HTML: </center>


- [[https://github.com/dkanada/gelli][Fuente]]


** Jellyamp
El desarrollador de esta app, se resistia a cambiar del servidor Plex a Jellyfin, por la aplicación PlexAmp.

Cuando se publicó Gelli, decidío desarrollar JellyAmp inspirada en PlexAmp.

- [[https://github.com/m0ngr31/jellyamp][Fuente]]

#+HTML: <center>
[[./images-blog/jellyamp.png]]
#+HTML: </center>
#+HTML: <center>
[[./images-blog/jellyamp1.png]]
#+HTML: </center>
#+HTML: <center>
[[./images-blog/jellyamp2.png]]
#+HTML: </center>

* TODO Servidor de Samba fácil
:PROPERTIES:
:TITLE: Servidor de Samba fácil
:EXPORT_FILE_NAME: servidor-de-samba-facil
:DESCRIPTION: Vamos a compartir una carpeta por *Samba* de un modo muy sencillo, para que sea accesible desde cualquier máquina dentro de una misma red local.
:EXPORT_DATE: 2021-04-02 15:24
:CATEGORY: servidor
:TAG: samba
:IMAGE: ./images-blog/samba.png
:END:

Vamos a compartir una carpeta por *Samba* de un modo muy sencillo, para que sea accesible desde cualquier máquina dentro de una misma red local.
#+HTML: <center>
[[./images-blog/samba.png]]
#+HTML: </center>

Para acceder a los datos de esta carpeta, no va a ser necesario utilizar usuario y contraseña, pero para darle un mínimo de seguridad, vamos a permitir el acceso a esta carpeta a determinados dispositivos en función de us IP.

El modo más correcto y seguro de compartir una carpeta por *Samba*, es crear un grupo donde ponemos un número de usuarios dentro de este y donde todos estos usuarios tienen usuario y contraseña.

He optado por esta configuración, porque es mucho más sencilla y he visto algo parecido en *Recalbox*. Una capeta que todos los usuarios de la red local tienen acceso y pueden depositar ahí sus archivos para compartir.

** Instalación

Instalación de Samba
#+BEGIN_SRC
sudo apt install samba
#+END_SRC

** Compartiendo Carpeta

Damos permisos para compartir la carpeta por *Samba* y que puede acceder cualquier usuario.
#+BEGIN_SRC
sudo chmod -R 777 /home/angel/samba/
#+END_SRC

** Archivo de configuración

Editamos el archivo de configuración.
#+BEGIN_SRC
sudo nano /etc/samba/smb.conf
#+END_SRC

#+BEGIN_SRC
[samba]                     # Nombre del servidor que veran los clientes

path=/home/angel/samba      # Ruta de la carpeta compartida
public=yes                  # Disponible para usuarios invitados u otros. Si ponemos no, solo los usuarios autorizados accederan
writable=yes                # Puede escribir y editar el contenido
guest ok = yes
browseable = yes            # El directorio, puede ser visible
read only = no

create mask = 0777          # Permisos de escritura y lectura de cualquier cliente
directory mask = 0777
force create mode = 777
force directory mode = 777
force security mode = 777
force directory security mode = 777
#+END_SRC

Desmarcamos el compartir impresoras
#+BEGIN_SRC
#[print$]
#   comment = Printer Drivers
#   path = /var/lib/samba/printers
#   browseable = yes
#   read only = yes
#   guest ok = no
#+END_SRC

Verifica con *testparm* si hay un error en el archivo de configuración
#+BEGIN_SRC
testparm
#+END_SRC

** Permitir de unas ip's en concreto

Para dar un poquito más de seguridad desde el servidor, solo vamos a permitir el acceso a determinadas ip's.
#+BEGIN_SRC
hosts allow = 192.168.1.100, 192.168.1.101
* TODO Docker: Telegram de terminal para Raspberry Pi y amd64
:PROPERTIES:
:TITLE: Docker: Telegram de terminal para Raspberry Pi y amd64
:EXPORT_FILE_NAME: docker-telegram-de-terminal-para-raspberry-pi-y-amd64
:DESCRIPTION: He creado un docker para poder utilizar Telegram desde tu terminal, ya estes en tu PC o Raspberry Pi.
:EXPORT_DATE: 2020-12-06 19:56
:CATEGORY: telegram
:TAG: docker
:IMAGE: ./images-blog/telegram.png
:END:

He creado un docker para poder utilizar Telegram desde tu terminal, ya estes en tu PC o Raspberry Pi.

#+HTML: <center>
[[./images-blog/telegram.png]]
#+HTML: </center>

** Dockers en dos versiones
*** Crear docker para amd64
#+BEGIN_SRC sh
docker create
--name telegram-cli   -e TZ=Europe/Madrid  -v $HOME/docker/telegram-cli:/root/.telegram-cli   ugeek/telegram-cli:amd64
#+END_SRC

*** Crear docker para arm y Raspberry Pi
#+BEGIN_SRC sh
docker create
--name telegram-cli   -e TZ=Europe/Madrid  -v $HOME/docker/telegram-cli:/root/.telegram-cli   ugeek/telegram-cli:arm
#+END_SRC

** Iniciar el docker

#+BEGIN_SRC
docker start telegram-cli
#+END_SRC

** Iniciar telegram-cli

#+BEGIN_SRC
docker exec -it telegram-cli telegram-cli -N -W
#+END_SRC

** Fuente
- https://hub.docker.com/r/ugeek/telegram-cli

