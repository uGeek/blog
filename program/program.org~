* TODO Gelli y Jellyamp. Clientes de Jellyfin para Android y Escritorio Linux, Windows y Mac
:PROPERTIES:
:TITLE: Clientes de Jellyfin para Android y Escritorio Linux, Windows y Mac
:EXPORT_FILE_NAME: clientes-de-jellyfin-para-android-y-escritorio-linux-windows-y-mac
:DESCRIPTION: Crecen los clientes de Jellyfin.
:EXPORT_DATE: 2021-07-11 21:40
:CATEGORY: jellyfin
:TAG: servidor
:IMAGE: ./images-blog/jellyfin.png
:END:

Crecen los clientes de Jellyfin.
#+HTML: <center>
[[./images-blog/jellyfin.png]]
#+HTML: </center>


** Gelli




#+HTML: <center>
[[./images-blog/gelli.png]]
#+HTML: </center>


- [[https://github.com/dkanada/gelli][Fuente]]


** Jellyamp
El desarrollador de esta app, se resistia a cambiar del servidor Plex a Jellyfin, por la aplicación PlexAmp.

Cuando se publicó Gelli, decidío desarrollar JellyAmp inspirada en PlexAmp.

- [[https://github.com/m0ngr31/jellyamp][Fuente]]

#+HTML: <center>
[[./images-blog/jellyamp.png]]
#+HTML: </center>
#+HTML: <center>
[[./images-blog/jellyamp1.png]]
#+HTML: </center>
#+HTML: <center>
[[./images-blog/jellyamp2.png]]
#+HTML: </center>

* TODO Servidor de Samba fácil
:PROPERTIES:
:TITLE: Servidor de Samba fácil
:EXPORT_FILE_NAME: servidor-de-samba-facil
:DESCRIPTION: Vamos a compartir una carpeta por *Samba* de un modo muy sencillo, para que sea accesible desde cualquier máquina dentro de una misma red local.
:EXPORT_DATE: 2021-04-02 15:24
:CATEGORY: servidor
:TAG: samba
:IMAGE: ./images-blog/samba.png
:END:

Vamos a compartir una carpeta por *Samba* de un modo muy sencillo, para que sea accesible desde cualquier máquina dentro de una misma red local.
#+HTML: <center>
[[./images-blog/samba.png]]
#+HTML: </center>

Para acceder a los datos de esta carpeta, no va a ser necesario utilizar usuario y contraseña, pero para darle un mínimo de seguridad, vamos a permitir el acceso a esta carpeta a determinados dispositivos en función de us IP.

El modo más correcto y seguro de compartir una carpeta por *Samba*, es crear un grupo donde ponemos un número de usuarios dentro de este y donde todos estos usuarios tienen usuario y contraseña.

He optado por esta configuración, porque es mucho más sencilla y he visto algo parecido en *Recalbox*. Una capeta que todos los usuarios de la red local tienen acceso y pueden depositar ahí sus archivos para compartir.

** Instalación

Instalación de Samba
#+BEGIN_SRC
sudo apt install samba
#+END_SRC

** Compartiendo Carpeta

Damos permisos para compartir la carpeta por *Samba* y que puede acceder cualquier usuario.
#+BEGIN_SRC
sudo chmod -R 777 /home/angel/samba/
#+END_SRC

** Archivo de configuración

Editamos el archivo de configuración.
#+BEGIN_SRC
sudo nano /etc/samba/smb.conf
#+END_SRC

#+BEGIN_SRC
[samba]                     # Nombre del servidor que veran los clientes

path=/home/angel/samba      # Ruta de la carpeta compartida
public=yes                  # Disponible para usuarios invitados u otros. Si ponemos no, solo los usuarios autorizados accederan
writable=yes                # Puede escribir y editar el contenido
guest ok = yes
browseable = yes            # El directorio, puede ser visible
read only = no

create mask = 0777          # Permisos de escritura y lectura de cualquier cliente
directory mask = 0777
force create mode = 777
force directory mode = 777
force security mode = 777
force directory security mode = 777
#+END_SRC

Desmarcamos el compartir impresoras
#+BEGIN_SRC
#[print$]
#   comment = Printer Drivers
#   path = /var/lib/samba/printers
#   browseable = yes
#   read only = yes
#   guest ok = no
#+END_SRC

Verifica con *testparm* si hay un error en el archivo de configuración
#+BEGIN_SRC
testparm
#+END_SRC

** Permitir de unas ip's en concreto

Para dar un poquito más de seguridad desde el servidor, solo vamos a permitir el acceso a determinadas ip's.
#+BEGIN_SRC
hosts allow = 192.168.1.100, 192.168.1.101
* TODO Trilium. Notas jerárquicas en Markdown
:PROPERTIES:
:TITLE: Trilium. Notas jerárquicas en Markdown
:EXPORT_FILE_NAME: trilium-notas-jerarquicas-en-markdown
:DESCRIPTION: Quizás ha llegado el momento de tomar notas para seres humanos, voy a
:EXPORT_DATE: 2020-12-25 20:45
:CATEGORY: markdown
:TAG: servidor
:IMAGE: ./images-blog/trilium.png
:END:

Quizás ha llegado el momento de tomar notas para seres humanos, voy a
hablar de Trilum.

Trilium es un método jerárquico para tomar notas, tareas,... donde estás
se gestionan con un método jerarquico como el orgmode y las podemos
exportar a posterior a HTML, Markdown o incluso imprimirlas en pdf. 

#+HTML: <center>
[[./images-blog/trilium.png]]
#+HTML: </center>

El método para introducir el texto es mediante la sintaxis markdown.

He probado diferentes dockers para la arquitectura AMD64 y ARM y
finalmente me quedo con él dockers oficial para amd64 y otro que he
encontrado de (=hlince)=para arm, que funciona muy bien en Raspberry.

** Docker amd64
:PROPERTIES:
:CUSTOM_ID: docker-amd64
:END:

El docker oficial y más actualizado para amd64 es:

#+BEGIN_EXAMPLE
docker run -t -i -p 127.0.0.1:99:8080 -v ~/trilium-data:/root/trilium-data zadam/trilium
#+END_EXAMPLE

- [[https://github.com/zadam/trilium/wiki/Docker-server-installation]]

Fork ugeek

#+BEGIN_EXAMPLE
docker run -t -i -p 127.0.0.1:99:8080           -v ~/trilium-data:/root/trilium-data           ugeek/trilium:amd64
#+END_EXAMPLE

** Docker para arm
:PROPERTIES:
:CUSTOM_ID: docker-para-arm
:END:

Es docker-compose para arm o Raspberry y funciona a la perfeción:

#+BEGIN_EXAMPLE
trilium:
image: hlince/trilium:latest-stable-arm
restart: always
ports:
- 99:8080
environment:
- TRILIUM_DATA_DIR=/data
volumes:
- ./trilium/data:/data
#+END_EXAMPLE

- https://hub.docker.com/r/hlince/trilium

Fork de ugeek

#+BEGIN_EXAMPLE
trilium:
image: ugeek/trilium:arm
restart: always
ports:
- 99:8080
environment:
- TRILIUM_DATA_DIR=/data
volumes:
- ./trilium/data:/data
#+END_EXAMPLE

** Fuentes
:PROPERTIES:
:CUSTOM_ID: fuentes
:END:

- [[https://github.com/zadam/trilium]]
- https://www.electronjs.org/apps/trilium-notes



